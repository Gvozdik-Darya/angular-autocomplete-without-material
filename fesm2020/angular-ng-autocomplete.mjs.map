{"version":3,"file":"angular-ng-autocomplete.mjs","sources":["../../../projects/autocomplete-lib/src/lib/highlight.pipe.ts","../../../projects/autocomplete-lib/src/lib/autocomplete.component.ts","../../../projects/autocomplete-lib/src/lib/autocomplete.component.html","../../../projects/autocomplete-lib/src/lib/autocomplete-lib.module.ts","../../../projects/autocomplete-lib/src/public_api.ts","../../../projects/autocomplete-lib/src/angular-ng-autocomplete.ts"],"sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n  transform(text: any, search: any, searchKeyword?: any): any {\n    let pattern = search.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n    pattern = pattern.split(' ').filter((t) => {\n      return t.length > 0;\n    }).join('|');\n    const regex = new RegExp(pattern, 'gi');\n\n    if (!search) {\n      return text;\n    }\n\n    if (searchKeyword) {\n      const name = text[searchKeyword].replace(regex, (match) => `<b>${match}</b>`);\n      // copy original object\n      const textCopied = {...text};\n      // set bold value into searchKeyword of copied object\n      textCopied[searchKeyword] = name;\n      return textCopied;\n    } else {\n      return search ? text.replace(regex, (match) => `<b>${match}</b>`) : text;\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  Component, ContentChild,\n  ElementRef,\n  EventEmitter, forwardRef,\n  Input, OnChanges,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges, TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {fromEvent, Observable} from 'rxjs';\nimport {debounceTime, filter, map} from 'rxjs/operators';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n/**\n * Keyboard events\n */\nconst isArrowUp = keyCode => keyCode === 38;\nconst isArrowDown = keyCode => keyCode === 40;\nconst isArrowUpDown = keyCode => isArrowUp(keyCode) || isArrowDown(keyCode);\nconst isEnter = keyCode => keyCode === 13;\nconst isBackspace = keyCode => keyCode === 8;\nconst isDelete = keyCode => keyCode === 46;\nconst isESC = keyCode => keyCode === 27;\nconst isTab = keyCode => keyCode === 9;\n\n\n@Component({\n  selector: 'ng-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AutocompleteComponent),\n      multi: true\n    }\n  ],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '(document:click)': 'handleClick($event)',\n    'class': 'ng-autocomplete'\n  },\n})\n\nexport class AutocompleteComponent implements OnInit, OnChanges, AfterViewInit, ControlValueAccessor {\n  @ViewChild('searchInput') searchInput: ElementRef; // input element\n  @ViewChild('filteredListElement') filteredListElement: ElementRef; // element of items\n  @ViewChild('historyListElement') historyListElement: ElementRef; // element of history items\n\n  inputKeyUp$: Observable<any>;\n  inputKeyDown$: Observable<any>;\n\n  public query = ''; // search query\n  public filteredList = []; // list of items\n  public historyList = []; // list of history items\n  public isHistoryListVisible = true;\n  public elementRef;\n  public selectedIdx = -1;\n  public toHighlight = '';\n  public notFound = false;\n  public isFocused = false;\n  public isOpen = false;\n  public isScrollToEnd = false;\n  public overlay = false;\n  private manualOpen = undefined;\n  private manualClose = undefined;\n\n\n  // @Inputs\n  /**\n   * Data of items list.\n   * It can be array of strings or array of objects.\n   */\n  @Input() public data = [];\n  @Input() public searchKeyword: string; // keyword to filter the list\n  @Input() public placeholder = '';\n  @Input() public heading = '';\n  @Input() public initialValue: any;\n  /**\n   * History identifier of history list\n   * When valid history identifier is given, then component stores selected item to local storage of user's browser.\n   * If it is null then history is hidden.\n   * History list is visible if at least one history item is stored.\n   */\n  @Input() public historyIdentifier: string;\n  /**\n   * Heading text of history list.\n   * If it is null then history heading is hidden.\n   */\n  @Input() public historyHeading = 'Recently selected';\n  @Input() public historyListMaxNumber = 15; // maximum number of items in the history list.\n  @Input() public notFoundText = 'Not found'; // set custom text when filter returns empty result\n  @Input() public isLoading: boolean; // loading mask\n  @Input() public debounceTime: number; // delay time while typing\n  @Input() public disabled: boolean; // input disable/enable\n  /**\n   * The minimum number of characters the user must type before a search is performed.\n   */\n  @Input() public minQueryLength = 1;\n\n  /**\n   * Focus first item in the list\n   */\n  @Input() public focusFirst = false;\n\n  /**\n   * Custom filter function\n   */\n  @Input() public customFilter: (items: any[], query: string) => any[];\n\n  /**\n   * Custom result render function\n   * @param value - selected value to be rendered inside input field\n   */\n  @Input() public selectedValueRender: (value: any) => string;\n\n  // @Output events\n  /** Event that is emitted whenever an item from the list is selected. */\n  @Output() selected = new EventEmitter<any>();\n\n  /** Event that is emitted whenever an input is changed. */\n  @Output() inputChanged = new EventEmitter<any>();\n\n  /** Event that is emitted whenever an input is focused. */\n  @Output() readonly inputFocused: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted whenever an input is cleared. */\n  @Output() readonly inputCleared: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted when the autocomplete panel is opened. */\n  @Output() readonly opened: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted when the autocomplete panel is closed. */\n  @Output() readonly closed: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted when scrolled to the end of items. */\n  @Output() readonly scrolledToEnd: EventEmitter<void> = new EventEmitter<void>();\n\n\n  // Custom templates\n  @Input() itemTemplate !: TemplateRef<any>;\n  @Input() notFoundTemplate !: TemplateRef<any>;\n  @ContentChild(TemplateRef) customTemplate !: TemplateRef<any>;\n\n  /**\n   * Propagates new value when model changes\n   */\n  propagateChange: any = () => {\n  };\n\n  onTouched: any = () => {\n  };\n\n  /**\n   * Writes a new value from the form model into the view,\n   * Updates model\n   */\n  writeValue(value: any = '') {\n    this.query = this.selectedValueRender !== undefined ? this.selectedValueRender(value) : this.defaultWriteValue(value);\n  }\n\n  private defaultWriteValue(value: any) {\n    return value && !this.isTypeString(value) ? value[this.searchKeyword] : value;\n  }\n\n  /**\n   * Registers a handler that is called when something in the view has changed\n   */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a handler specifically for when a control receives a touch event\n   */\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Event that is called when the value of an input element is changed\n   */\n  onChange(event) {\n    this.propagateChange(event.target.value);\n  }\n\n  constructor(elementRef: ElementRef, private renderer: Renderer2) {\n    this.elementRef = elementRef;\n  }\n\n  /**\n   * Event that is called when the control status changes to or from DISABLED\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    this.initEventStream();\n    this.handleScroll();\n  }\n\n  /**\n   * Set initial value\n   * @param value\n   */\n  public setInitialValue(value: any) {\n    if (this.initialValue) {\n      this.select(value);\n    }\n  }\n\n  /**\n   * Update search results\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    this.setInitialValue(this.initialValue);\n    if (\n      changes &&\n      changes.data &&\n      Array.isArray(changes.data.currentValue)\n    ) {\n      this.handleItemsChange();\n      if (!changes.data.firstChange && this.isFocused) {\n        this.handleOpen();\n      }\n    }\n  }\n\n  /**\n   * Items change\n   */\n  public handleItemsChange() {\n    this.isScrollToEnd = false;\n    if (!this.isOpen) {\n      return;\n    }\n\n    this.filteredList = this.data;\n    this.notFound = !this.filteredList || this.filteredList.length === 0;\n\n    // Filter list when updating data and panel is open\n    if (this.isOpen) {\n      this.filterList();\n    }\n  }\n\n  /**\n   * Filter data\n   */\n  public filterList() {\n    this.selectedIdx = -1;\n    this.initSearchHistory();\n    if (this.query != null && this.data) {\n      this.toHighlight = this.query;\n      this.filteredList = this.customFilter !== undefined ? this.customFilter([...this.data], this.query) : this.defaultFilterFunction();\n      // If [focusFirst]=\"true\" automatically focus the first match\n      if (this.filteredList.length > 0 && this.focusFirst) {\n        this.selectedIdx = 0;\n      }\n    } else {\n      this.notFound = false;\n    }\n  }\n\n  /**\n   * Default filter function, used unless customFilter is provided\n   */\n  public defaultFilterFunction(): any[] {\n    return this.data.filter((item: any) => {\n      if (typeof item === 'string') {\n        // string logic, check equality of strings\n        return item.toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n      } else if (typeof item === 'object' && item instanceof Object) {\n        // object logic, check property equality\n        return item[this.searchKeyword] ? item[this.searchKeyword].toLowerCase().indexOf(this.query.toLowerCase()) > -1 : \"\";\n      }\n    });\n  }\n\n\n  /**\n   * Check if item is a string in the list.\n   * @param item\n   */\n  isTypeString(item) {\n    return typeof item === 'string';\n  }\n\n  /**\n   * Select item in the list.\n   * @param item\n   */\n  public select(item) {\n    this.query = !this.isTypeString(item) ? item[this.searchKeyword] : item;\n    this.isOpen = true;\n    this.overlay = false;\n    this.selected.emit(item);\n    this.propagateChange(item);\n\n    if (this.initialValue) {\n      // check if history already exists in localStorage and then update\n      const history = window.localStorage.getItem(`${this.historyIdentifier}`);\n      if (history) {\n        let existingHistory = JSON.parse(localStorage[`${this.historyIdentifier}`]);\n        if (!(existingHistory instanceof Array)) existingHistory = [];\n\n        // check if selected item exists in existingHistory\n        if (!existingHistory.some((existingItem) => !this.isTypeString(existingItem)\n          ? existingItem[this.searchKeyword] == item[this.searchKeyword] : existingItem == item)) {\n          existingHistory.unshift(item);\n          localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(existingHistory));\n\n          // check if items don't exceed max allowed number\n          if (existingHistory.length >= this.historyListMaxNumber) {\n            existingHistory.splice(existingHistory.length - 1, 1);\n            localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(existingHistory));\n          }\n        } else {\n          // if selected item exists in existingHistory swap to top in array\n          if (!this.isTypeString(item)) {\n            // object logic\n            const copiedExistingHistory = existingHistory.slice(); // copy original existingHistory array\n            const selectedIndex = copiedExistingHistory.map((el) => el[this.searchKeyword]).indexOf(item[this.searchKeyword]);\n            copiedExistingHistory.splice(selectedIndex, 1);\n            copiedExistingHistory.splice(0, 0, item);\n            localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(copiedExistingHistory));\n          } else {\n            // string logic\n            const copiedExistingHistory = existingHistory.slice(); // copy original existingHistory array\n            copiedExistingHistory.splice(copiedExistingHistory.indexOf(item), 1);\n            copiedExistingHistory.splice(0, 0, item);\n            localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(copiedExistingHistory));\n          }\n        }\n      } else {\n        this.saveHistory(item);\n      }\n    } else {\n      this.saveHistory(item);\n    }\n    this.handleClose();\n  }\n\n  /**\n   * Document click\n   * @param e event\n   */\n  public handleClick(e) {\n    let clickedComponent = e.target;\n    let inside = false;\n    do {\n      if (clickedComponent === this.elementRef.nativeElement) {\n        inside = true;\n        if (this.filteredList.length) {\n          this.handleOpen();\n        }\n      }\n      clickedComponent = clickedComponent.parentNode;\n    } while (clickedComponent);\n    if (!inside) {\n      this.handleClose();\n    }\n  }\n\n  /**\n   * Handle body overlay\n   */\n  handleOverlay() {\n    this.overlay = false;\n  }\n\n  /**\n   * Scroll items\n   */\n  public handleScroll() {\n    this.renderer.listen(this.filteredListElement.nativeElement, 'scroll', () => {\n      this.scrollToEnd();\n    });\n  }\n\n  /**\n   * Define panel state\n   */\n  setPanelState(event) {\n    if (event) {\n      event.stopPropagation();\n    }\n    // If controls are untouched\n    if (typeof this.manualOpen === 'undefined'\n      && typeof this.manualClose === 'undefined') {\n      this.isOpen = false;\n      this.handleOpen();\n    }\n\n    // If one of the controls is untouched and other is deactivated\n    if (typeof this.manualOpen === 'undefined'\n      && this.manualClose === false\n      || typeof this.manualClose === 'undefined'\n      && this.manualOpen === false) {\n      this.isOpen = false;\n      this.handleOpen();\n    }\n\n    // if controls are touched but both are deactivated\n    if (this.manualOpen === false && this.manualClose === false) {\n      this.isOpen = false;\n      this.handleOpen();\n    }\n\n    // if open control is touched and activated\n    if (this.manualOpen) {\n      this.isOpen = false;\n      this.handleOpen();\n      this.manualOpen = false;\n    }\n\n    // if close control is touched and activated\n    if (this.manualClose) {\n      this.isOpen = true;\n      this.handleClose();\n      this.manualClose = false;\n    }\n  }\n\n  /**\n   * Manual controls\n   */\n  open() {\n    this.manualOpen = true;\n    this.isOpen = false;\n    this.handleOpen();\n  }\n\n  close() {\n    this.manualClose = true;\n    this.isOpen = true;\n    this.handleClose();\n  }\n\n  focus() {\n    this.handleFocus(event);\n  }\n\n  clear() {\n    this.remove(event);\n  }\n\n  /**\n   * Remove search query\n   */\n  public remove(e) {\n    e.stopPropagation();\n    this.query = '';\n    this.inputCleared.emit();\n    this.propagateChange(this.query);\n    this.setPanelState(e);\n\n    if (this.data && !this.data.length) {\n      this.notFound = false;\n    }\n  }\n\n  /**\n   * Initialize historyList search\n   */\n  initSearchHistory() {\n    this.isHistoryListVisible = false;\n    if (this.historyIdentifier && !this.query) {\n      const history = window.localStorage.getItem(`${this.historyIdentifier}`);\n      if (history) {\n        this.isHistoryListVisible = true;\n        this.filteredList = [];\n        this.historyList = history ? JSON.parse(history) : [];\n      } else {\n        this.isHistoryListVisible = false;\n      }\n    } else {\n      this.isHistoryListVisible = false;\n    }\n  }\n\n  handleOpen() {\n    if (this.isOpen || this.isOpen && !this.isLoading) {\n      return;\n    }\n    // If data exists\n    if (this.data && this.data.length) {\n      this.isOpen = true;\n      this.overlay = true;\n      this.filterList();\n      this.opened.emit();\n    }\n  }\n\n  handleClose() {\n    if (!this.isOpen) {\n      this.isFocused = false;\n      return;\n    }\n    this.isOpen = false;\n    this.overlay = false;\n    this.filteredList = [];\n    this.selectedIdx = -1;\n    this.notFound = false;\n    this.isHistoryListVisible = false;\n    this.isFocused = false;\n    this.closed.emit();\n  }\n\n  handleFocus(e) {\n    this.searchInput.nativeElement.focus();\n    if (this.isFocused) {\n      return;\n    }\n    this.inputFocused.emit(e);\n    // if data exists then open\n    if (this.data && this.data.length) {\n      this.setPanelState(e);\n    }\n    this.isFocused = true;\n  }\n\n  scrollToEnd(): void {\n    if (this.isScrollToEnd) {\n      return;\n    }\n\n    const scrollTop = this.filteredListElement.nativeElement\n      .scrollTop;\n    const scrollHeight = this.filteredListElement.nativeElement\n      .scrollHeight;\n    const elementHeight = this.filteredListElement.nativeElement\n      .clientHeight;\n    const atBottom = elementHeight !=0 && Math.abs(scrollHeight - elementHeight - scrollTop) < 1;\n\n    if (atBottom) {\n      this.scrolledToEnd.emit();\n      this.isScrollToEnd = true;\n    }\n  }\n\n  /**\n   * Initialize keyboard events\n   */\n  initEventStream() {\n    this.inputKeyUp$ = fromEvent(\n      this.searchInput.nativeElement, 'keyup'\n    ).pipe(map(\n      (e: any) => e\n    ));\n\n    this.inputKeyDown$ = fromEvent(\n      this.searchInput.nativeElement,\n      'keydown'\n    ).pipe(map(\n      (e: any) => e\n    ));\n\n    this.listenEventStream();\n  }\n\n  /**\n   * Listen keyboard events\n   */\n  listenEventStream() {\n    // key up event\n    this.inputKeyUp$\n      .pipe(\n        filter(e =>\n          !isArrowUpDown(e.keyCode) &&\n          !isEnter(e.keyCode) &&\n          !isESC(e.keyCode) &&\n          !isTab(e.keyCode)),\n        debounceTime(this.debounceTime)\n      ).subscribe(e => {\n      this.onKeyUp(e);\n    });\n\n    // cursor up & down\n    this.inputKeyDown$.pipe(filter(\n      e => isArrowUpDown(e.keyCode)\n    )).subscribe(e => {\n      e.preventDefault();\n      this.onFocusItem(e);\n    });\n\n    // enter keyup\n    this.inputKeyUp$.pipe(filter(e => isEnter(e.keyCode))).subscribe(e => {\n      //this.onHandleEnter();\n    });\n\n    // enter keydown\n    this.inputKeyDown$.pipe(filter(e => isEnter(e.keyCode))).subscribe(e => {\n      this.onHandleEnter();\n    });\n\n    // ESC\n    this.inputKeyUp$.pipe(\n      filter(e => isESC(e.keyCode),\n        debounceTime(100))\n    ).subscribe(e => {\n      this.onEsc();\n    });\n\n    // TAB\n    this.inputKeyDown$.pipe(\n      filter(e => isTab(e.keyCode))\n    ).subscribe(e => {\n      this.onTab();\n    });\n\n    // delete\n    this.inputKeyDown$.pipe(\n      filter(e => isBackspace(e.keyCode) || isDelete(e.keyCode))\n    ).subscribe(e => {\n      this.onDelete();\n    });\n  }\n\n  /**\n   * on keyup == when input changed\n   * @param e event\n   */\n  onKeyUp(e) {\n    this.notFound = false; // search results are unknown while typing\n    // if input is empty\n    if (!this.query) {\n      this.notFound = false;\n      this.inputChanged.emit(e.target.value);\n      this.inputCleared.emit();\n      this.setPanelState(e);\n    }\n    // note that '' can be a valid query\n    if (!this.query && this.query !== '') {\n      return;\n    }\n    // if query >= to minQueryLength\n    if (this.query.length >= this.minQueryLength) {\n      this.inputChanged.emit(e.target.value);\n      this.filterList();\n\n      // If no results found\n      if (!this.filteredList.length && !this.isLoading) {\n        this.notFoundText ? this.notFound = true : this.notFound = false;\n      }\n\n      if (this.data && !this.data.length) {\n        this.isOpen = true;\n      }\n    }\n  }\n\n\n  /**\n   * Keyboard arrow top and arrow bottom\n   * @param e event\n   */\n  onFocusItem(e) {\n    // move arrow up and down on filteredList or historyList\n    if (!this.historyList.length || !this.isHistoryListVisible) {\n      // filteredList\n      const totalNumItem = this.filteredList.length;\n      if (e.key === 'ArrowDown') {\n        let sum = this.selectedIdx;\n        sum = (this.selectedIdx === null) ? 0 : sum + 1;\n        this.selectedIdx = (totalNumItem + sum) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      } else if (e.key === 'ArrowUp') {\n        if (this.selectedIdx == -1) {\n          this.selectedIdx = 0;\n        }\n        this.selectedIdx = (totalNumItem + this.selectedIdx - 1) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      }\n    } else {\n      // historyList\n      const totalNumItem = this.historyList.length;\n      if (e.key === 'ArrowDown') {\n        let sum = this.selectedIdx;\n        sum = (this.selectedIdx === null) ? 0 : sum + 1;\n        this.selectedIdx = (totalNumItem + sum) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      } else if (e.key === 'ArrowUp') {\n        if (this.selectedIdx == -1) {\n          this.selectedIdx = 0;\n        }\n        this.selectedIdx = (totalNumItem + this.selectedIdx - 1) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      }\n    }\n  }\n\n  /**\n   * Scroll to focused item\n   * * @param index\n   */\n  scrollToFocusedItem(index) {\n    let listElement = null;\n    // Define list element\n    if (!this.historyList.length || !this.isHistoryListVisible) {\n      // filteredList element\n      listElement = this.filteredListElement.nativeElement;\n    } else {\n      // historyList element\n      listElement = this.historyListElement.nativeElement;\n    }\n\n    const items = Array.prototype.slice.call(listElement.childNodes).filter((node: any) => {\n      if (node.nodeType === 1) {\n        // if node is element\n        return node.className.includes('item');\n      } else {\n        return false;\n      }\n    });\n\n    if (!items.length) {\n      return;\n    }\n\n    const listHeight = listElement.offsetHeight;\n    const itemHeight = items[index].offsetHeight;\n    const visibleTop = listElement.scrollTop;\n    const visibleBottom = listElement.scrollTop + listHeight - itemHeight;\n    const targetPosition = items[index].offsetTop;\n\n    if (targetPosition < visibleTop) {\n      listElement.scrollTop = targetPosition;\n    }\n\n    if (targetPosition > visibleBottom) {\n      listElement.scrollTop = targetPosition - listHeight + itemHeight;\n    }\n  }\n\n  /**\n   * Select item on enter click\n   */\n  onHandleEnter() {\n    // click enter to choose item from filteredList or historyList\n    if (this.selectedIdx > -1) {\n      if (!this.historyList.length || !this.isHistoryListVisible) {\n        // filteredList\n        this.query = !this.isTypeString(this.filteredList[this.selectedIdx])\n          ? this.filteredList[this.selectedIdx][this.searchKeyword]\n          : this.filteredList[this.selectedIdx];\n\n        this.saveHistory(this.filteredList[this.selectedIdx]);\n        this.select(this.filteredList[this.selectedIdx]);\n      } else {\n        // historyList\n        this.query = !this.isTypeString(this.historyList[this.selectedIdx])\n          ? this.historyList[this.selectedIdx][this.searchKeyword]\n          : this.historyList[this.selectedIdx];\n        this.saveHistory(this.historyList[this.selectedIdx]);\n        this.select(this.historyList[this.selectedIdx]);\n      }\n    }\n    this.isHistoryListVisible = false;\n    this.handleClose();\n  }\n\n  /**\n   * Esc click\n   */\n  onEsc() {\n    this.searchInput.nativeElement.blur();\n    this.handleClose();\n  }\n\n  /**\n   * Tab click\n   */\n  onTab() {\n    this.searchInput.nativeElement.blur();\n    this.handleClose();\n  }\n\n  /**\n   * Delete click\n   */\n  onDelete() {\n    this.isOpen = true;\n  }\n\n\n  /**\n   * Select item to save in localStorage\n   * @param selected\n   */\n  saveHistory(selected) {\n    if (this.historyIdentifier) {\n      // check if selected item exists in historyList\n      if (!this.historyList.some((item) => !this.isTypeString(item)\n        ? item[this.searchKeyword] == selected[this.searchKeyword] : item == selected)) {\n        this.saveHistoryToLocalStorage([selected, ...this.historyList]);\n\n        // check if items don't exceed max allowed number\n        if (this.historyList.length >= this.historyListMaxNumber) {\n          this.historyList.splice(this.historyList.length - 1, 1);\n          this.saveHistoryToLocalStorage([selected, ...this.historyList]);\n        }\n      } else {\n        // if selected item exists in historyList swap to top in array\n        if (!this.isTypeString(selected)) {\n          // object logic\n          const copiedHistoryList = this.historyList.slice(); // copy original historyList array\n          const selectedIndex = copiedHistoryList.map((item) => item[this.searchKeyword]).indexOf(selected[this.searchKeyword]);\n          copiedHistoryList.splice(selectedIndex, 1);\n          copiedHistoryList.splice(0, 0, selected);\n          this.saveHistoryToLocalStorage([...copiedHistoryList]);\n        } else {\n          // string logic\n          const copiedHistoryList = this.historyList.slice(); // copy original historyList array\n          copiedHistoryList.splice(this.historyList.indexOf(selected), 1);\n          copiedHistoryList.splice(0, 0, selected);\n          this.saveHistoryToLocalStorage([...copiedHistoryList]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Save item in localStorage\n   * @param selected\n   */\n  saveHistoryToLocalStorage(selected) {\n    window.localStorage.setItem(\n      `${this.historyIdentifier}`,\n      JSON.stringify(selected)\n    );\n  }\n\n  /**\n   * Remove item from localStorage\n   * @param index\n   * @param e event\n   */\n  removeHistoryItem(index, e) {\n    e.stopPropagation();\n    this.historyList = this.historyList.filter((v, i) => i !== index);\n    this.saveHistoryToLocalStorage(this.historyList);\n    if (this.historyList.length == 0) {\n      window.localStorage.removeItem(`${this.historyIdentifier}`);\n      this.filterList();\n    }\n  }\n\n  /**\n   * Reset localStorage\n   * @param e event\n   */\n  resetHistoryList(e) {\n    e.stopPropagation();\n    this.historyList = [];\n    window.localStorage.removeItem(`${this.historyIdentifier}`);\n    this.filterList();\n  }\n}\n","<div\n  class=\"autocomplete-container\"\n  aria-owns=\"suggestions suggestions-history\"\n  [attr.aria-expanded]=\"isOpen\"\n  [ngClass]=\"{ active: isOpen }\"\n>\n  <div class=\"input-container\">\n    <input\n      #searchInput\n      type=\"text\"\n      attr.aria-label=\"{{ placeholder }}\"\n      aria-autocomplete=\"list\"\n      role=\"combobox\"\n      placeholder=\"{{ placeholder }}\"\n      [(ngModel)]=\"query\"\n      (input)=\"onChange($event)\"\n      (focus)=\"handleFocus($event)\"\n      (blur)=\"onTouched($event)\"\n      [disabled]=\"disabled\"\n      autocomplete=\"off\"\n    />\n    <div\n      class=\"x\"\n      *ngIf=\"query && !isLoading && !disabled\"\n      (click)=\"remove($event)\"\n    >\n      <svg\n        fill=\"#0000008a\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        width=\"18px\"\n        height=\"18px\"\n      >\n        <path\n          d=\"M 4.7070312 3.2929688 L 3.2929688 4.7070312 L 10.585938 12 L 3.2929688 19.292969 L 4.7070312 20.707031 L 12 13.414062 L 19.292969 20.707031 L 20.707031 19.292969 L 13.414062 12 L 20.707031 4.7070312 L 19.292969 3.2929688 L 12 10.585938 L 4.7070312 3.2929688 z\"\n        />\n      </svg>\n    </div>\n    <!--Loading mask-->\n    <div class=\"sk-fading-circle\" *ngIf=\"isLoading\">\n      <div class=\"sk-circle1 sk-circle\"></div>\n      <div class=\"sk-circle2 sk-circle\"></div>\n      <div class=\"sk-circle3 sk-circle\"></div>\n      <div class=\"sk-circle4 sk-circle\"></div>\n      <div class=\"sk-circle5 sk-circle\"></div>\n      <div class=\"sk-circle6 sk-circle\"></div>\n      <div class=\"sk-circle7 sk-circle\"></div>\n      <div class=\"sk-circle8 sk-circle\"></div>\n      <div class=\"sk-circle9 sk-circle\"></div>\n      <div class=\"sk-circle10 sk-circle\"></div>\n      <div class=\"sk-circle11 sk-circle\"></div>\n      <div class=\"sk-circle12 sk-circle\"></div>\n    </div>\n  </div>\n\n  <!--FilteredList items-->\n  <div\n    class=\"suggestions-container\"\n    id=\"suggestions\"\n    role=\"listbox\"\n    [ngClass]=\"{\n      'is-hidden': isHistoryListVisible,\n      'is-visible': !isHistoryListVisible\n    }\"\n  >\n    <!--FilteredList heading-->\n    <div class=\"heading\" *ngIf=\"filteredList.length > 0 && heading\">\n      <div class=\"text\">{{ heading }}</div>\n    </div>\n\n    <ul #filteredListElement>\n      <li *ngFor=\"let item of filteredList; let idx = index\" class=\"item\">\n        <!--string logic-->\n        <div\n          [class.complete-selected]=\"idx === selectedIdx\"\n          *ngIf=\"isTypeString(item)\"\n          (click)=\"select(item)\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"\n              itemTemplate;\n              context: { $implicit: item | highlight: toHighlight }\n            \"\n          >\n          </ng-container>\n        </div>\n        <!--object logic-->\n        <div\n          [class.complete-selected]=\"idx === selectedIdx\"\n          *ngIf=\"!isTypeString(item)\"\n          (click)=\"select(item)\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"\n              itemTemplate;\n              context: {\n                $implicit: item | highlight: toHighlight:searchKeyword\n              }\n            \"\n          >\n          </ng-container>\n        </div>\n      </li>\n    </ul>\n  </div>\n\n  <!--HistoryList items-->\n  <div\n    class=\"suggestions-container\"\n    id=\"suggestions-history\"\n    role=\"listbox\"\n    [ngClass]=\"{\n      'is-hidden': !isHistoryListVisible,\n      'is-visible': isHistoryListVisible\n    }\"\n  >\n    <!--HistoryList heading-->\n    <div class=\"heading\" *ngIf=\"historyList.length > 0 && historyHeading\">\n      <div class=\"text\">{{ historyHeading }}</div>\n      <div class=\"x\" (click)=\"resetHistoryList($event)\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          viewBox=\"0 0 24 24\"\n          width=\"18px\"\n          height=\"18px\"\n        >\n          <g id=\"surface135948714\">\n            <path\n              style=\"\n                stroke: none;\n                fill-rule: nonzero;\n                fill: rgb(0%, 0%, 0%, 0.54);\n                fill-opacity: 1;\n              \"\n              d=\"M 10 2 L 9 3 L 3 3 L 3 5 L 21 5 L 21 3 L 15 3 L 14 2 Z M 4.367188 7 L 5.890625 20.265625 C 6.023438 21.253906 6.878906 22 7.875 22 L 16.121094 22 C 17.121094 22 17.972656 21.253906 18.105469 20.253906 L 19.632812 7 Z M 4.367188 7 \"\n            />\n          </g>\n        </svg>\n      </div>\n    </div>\n\n    <ul #historyListElement>\n      <li *ngFor=\"let item of historyList; let idx = index\" class=\"item\">\n        <!--string logic-->\n        <div\n          [class.complete-selected]=\"idx === selectedIdx\"\n          *ngIf=\"isTypeString(item)\"\n          (click)=\"select(item)\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item }\"\n          >\n          </ng-container>\n        </div>\n        <!--object logic-->\n        <div\n          [class.complete-selected]=\"idx === selectedIdx\"\n          *ngIf=\"!isTypeString(item)\"\n          (click)=\"select(item)\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item }\"\n          >\n          </ng-container>\n        </div>\n        <div class=\"x\" (click)=\"removeHistoryItem(idx, $event)\">\n          <svg\n            fill=\"#0000008a\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            width=\"18px\"\n            height=\"18px\"\n          >\n            <path\n              d=\"M 4.7070312 3.2929688 L 3.2929688 4.7070312 L 10.585938 12 L 3.2929688 19.292969 L 4.7070312 20.707031 L 12 13.414062 L 19.292969 20.707031 L 20.707031 19.292969 L 13.414062 12 L 20.707031 4.7070312 L 19.292969 3.2929688 L 12 10.585938 L 4.7070312 3.2929688 z\"\n            />\n          </svg>\n        </div>\n      </li>\n    </ul>\n  </div>\n\n  <!--Not found-->\n  <div class=\"not-found\" *ngIf=\"isLoading ? !isLoading && notFound : notFound\">\n    <ng-container\n      *ngTemplateOutlet=\"notFoundTemplate; context: { $implicit: notFoundText }\"\n    >\n    </ng-container>\n  </div>\n</div>\n<div\n  class=\"autocomplete-overlay\"\n  *ngIf=\"overlay\"\n  (click)=\"handleOverlay()\"\n></div>\n","import {NgModule} from '@angular/core';\nimport {AutocompleteComponent} from './autocomplete.component';\nimport {FormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {HighlightPipe} from './highlight.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [AutocompleteComponent, HighlightPipe],\n  exports: [ AutocompleteComponent, HighlightPipe]\n})\nexport class AutocompleteLibModule {\n}\n","/*\n * Public API Surface of autocomplete-lib\n */\n\nexport * from './lib/autocomplete-lib.module';\nexport * from './lib/autocomplete.component';\nexport * from './lib/highlight.pipe';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i3.HighlightPipe"],"mappings":"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"}